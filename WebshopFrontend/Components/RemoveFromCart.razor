@using System.Diagnostics
@using WebshopCore
@using WebshopCore.Dtos
@rendermode InteractiveServer
@inject IHttpClientFactory HttpClientFactory
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<i class="bi bi-trash3 remove-icon" @onclick="() => RemoveFromCartAsync(Product)"></i>

@code {
    private List<BookDto> _cart = new();

    [Parameter]
    public required BookDto Product { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _cart = await GetItemsFromCartAsync();
        StateHasChanged();
    }

    private async Task<List<BookDto>> GetItemsFromCartAsync()
    {
        return await LocalStorage.GetItemAsync<List<BookDto>>("cart") ?? new List<BookDto>();
    }

    private async Task RemoveFromCartAsync(BookDto product)
    {
        _cart = await GetItemsFromCartAsync();
        _cart.RemoveAll(p => p.Id == product.Id);
        await LocalStorage.SetItemAsync("cart", _cart);
    }
}
