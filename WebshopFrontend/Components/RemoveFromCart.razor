@using System.Diagnostics
@using WebshopCore
@rendermode InteractiveServer
@inject IHttpClientFactory HttpClientFactory
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<button @onclick="() => RemoveFromCartAsync(Product)">Remove</button>

@code {
    private List<ProductDto> _cart = new();

    [Parameter]
    public ProductDto Product { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        _cart = await GetItemsFromCartAsync();
        StateHasChanged();
    }

    private async Task<List<ProductDto>> GetItemsFromCartAsync()
    {
        return await LocalStorage.GetItemAsync<List<ProductDto>>("cart") ?? new List<ProductDto>();
    }

    private async Task RemoveFromCartAsync(ProductDto product)
    {
        _cart = await GetItemsFromCartAsync();
        _cart.RemoveAll(p => p.Id == product.Id);
        await LocalStorage.SetItemAsync("cart", _cart);
    }
}
